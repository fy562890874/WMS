# 后端接口文档

## 用户管理 (

UserController

)

### 获取所有用户
- **URL**: `/users`
- **方法**: GET
- **描述**: 获取所有用户
- **参数**: 无
- **响应**: 用户列表

### 添加用户
- **URL**: `/users`
- **方法**: POST
- **描述**: 添加新用户
- **参数**:
  - 

User

 对象（请求体）
- **响应**: 添加成功或失败信息

### 更新用户信息
- **URL**: `/users`
- **方法**: PUT
- **描述**: 更新用户信息
- **参数**:
  - 

User

 对象（请求体）
- **响应**: 更新成功或失败信息

### 删除用户
- **URL**: `/users/{userId}`
- **方法**: DELETE
- **描述**: 删除指定用户
- **参数**:
  - 

userId

（路径参数）
- **响应**: 删除成功或失败信息

### 重置密码
- **URL**: `/users/resetPassword`
- **方法**: POST
- **描述**: 重置用户密码
- **参数**:
  - 

userId

（请求参数）
  - 

password

（请求参数）
- **响应**: 重置成功或失败信息

### 分配角色
- **URL**: `/users/assignRoles`
- **方法**: POST
- **描述**: 为用户分配角色
- **参数**:
  - 

userId

（请求参数）
  - 

roleIds

（请求体，角色ID列表）
- **响应**: 分配成功或失败信息

### 启用用户
- **URL**: `/users/enable/{userId}`
- **方法**: POST
- **描述**: 启用指定用户
- **参数**:
  - 

userId

（路径参数）
- **响应**: 启用成功或失败信息

### 禁用用户
- **URL**: `/users/disable/{userId}`
- **方法**: POST
- **描述**: 禁用指定用户
- **参数**:
  - 

userId

（路径参数）
- **响应**: 禁用成功或失败信息

---

## 仓库管理 (

WarehouseController

)

### 获取所有仓库
- **URL**: `/warehouses`
- **方法**: GET
- **描述**: 获取所有仓库
- **参数**: 无
- **响应**: 仓库列表

### 添加仓库
- **URL**: `/warehouses`
- **方法**: POST
- **描述**: 添加新仓库
- **参数**:
  - 

Warehouse

 对象（请求体）
- **响应**: 添加成功或失败信息

### 更新仓库信息
- **URL**: `/warehouses`
- **方法**: PUT
- **描述**: 更新仓库信息
- **参数**:
  - 

Warehouse

 对象（请求体）
- **响应**: 更新成功或失败信息

### 删除仓库
- **URL**: `/warehouses/{warehouseId}`
- **方法**: DELETE
- **描述**: 删除指定仓库
- **参数**:
  - 

warehouseId

（路径参数）
- **响应**: 删除成功或失败信息

---

## 角色管理 (

RoleController

)

### 获取所有角色
- **URL**: `/roles`
- **方法**: GET
- **描述**: 获取所有角色
- **参数**: 无
- **响应**: 角色列表

### 添加角色
- **URL**: `/roles`
- **方法**: POST
- **描述**: 添加新角色
- **参数**:
  - 

Role

 对象（请求体）
- **响应**: 添加成功或失败信息

### 更新角色信息
- **URL**: `/roles`
- **方法**: PUT
- **描述**: 更新角色信息
- **参数**:
  - 

Role

 对象（请求体）
- **响应**: 更新成功或失败信息

### 删除角色
- **URL**: `/roles/{roleId}`
- **方法**: DELETE
- **描述**: 删除指定角色
- **参数**:
  - 

roleId

（路径参数）
- **响应**: 删除成功或失败信息

---

## 货品管理 (

ProductController

)

### 获取所有货品
- **URL**: `/products`
- **方法**: GET
- **描述**: 获取所有货品
- **参数**: 无
- **响应**: 货品列表

### 添加货品
- **URL**: `/products`
- **方法**: POST
- **描述**: 添加新货品
- **参数**:
  - 

Product

 对象（请求体）
- **响应**: 添加成功或失败信息

### 更新货品信息
- **URL**: `/products`
- **方法**: PUT
- **描述**: 更新货品信息
- **参数**:
  - 

Product

 对象（请求体）
- **响应**: 更新成功或失败信息

### 删除货品
- **URL**: `/products/{productId}`
- **方法**: DELETE
- **描述**: 删除指定货品
- **参数**:
  - 

productId

（路径参数）
- **响应**: 删除成功或失败信息

### 调整库存
- **URL**: `/products/adjustStock`
- **方法**: POST
- **描述**: 调整货品库存
- **参数**:
  - 

productId

（请求参数）
  - 

warehouseId

（请求参数）
  - 

quantity

（请求参数）
- **响应**: 调整成功或失败信息

### 上传货品图片
- **URL**: `/products/uploadImage`
- **方法**: POST
- **描述**: 上传货品图片
- **参数**:
  - 

productId

（请求参数）
  - 

imageUrl

（请求参数）
- **响应**: 上传成功或失败信息

---

## 权限管理 (

PermissionController

)

### 获取所有权限
- **URL**: `/permissions`
- **方法**: GET
- **描述**: 获取所有权限
- **参数**: 无
- **响应**: 权限列表

### 添加权限
- **URL**: `/permissions`
- **方法**: POST
- **描述**: 添加新权限
- **参数**:
  - 

Permission

 对象（请求体）
- **响应**: 添加成功或失败信息

### 更新权限信息
- **URL**: `/permissions`
- **方法**: PUT
- **描述**: 更新权限信息
- **参数**:
  - 

Permission

 对象（请求体）
- **响应**: 更新成功或失败信息

### 删除权限
- **URL**: `/permissions/{permissionId}`
- **方法**: DELETE
- **描述**: 删除指定权限
- **参数**:
  - 

permissionId

（路径参数）
- **响应**: 删除成功或失败信息

---

## 登录认证 (

LoginController

)

### 用户登录
- **URL**: `/auth/login`
- **方法**: POST
- **描述**: 用户登录，获取JWT Token
- **参数**:
  - 

username

（请求参数）
  - 

password

（请求参数）
- **响应**: JWT Token 或 错误信息

---

## 系统日志管理 (

LogController

)

### 获取所有日志
- **URL**: 

logs


- **方法**: GET
- **描述**: 获取所有系统日志
- **参数**: 无
- **响应**: 日志列表

### 根据用户ID获取日志
- **URL**: `/logs/user/{userId}`
- **方法**: GET
- **描述**: 获取指定用户的日志
- **参数**:
  - 

userId

（路径参数）
- **响应**: 日志列表

---

## 出入库管理 (

InventoryController

)

### 入库
- **URL**: `/inventory/stockIn`
- **方法**: POST
- **描述**: 进行入库操作
- **参数**:
  - 

InventoryRecord

 对象（请求体）
- **响应**: 入库成功或失败信息

### 出库
- **URL**: `/inventory/stockOut`
- **方法**: POST
- **描述**: 进行出库操作
- **参数**:
  - 

InventoryRecord

 对象（请求体）
- **响应**: 出库成功或失败信息

### 转库
- **URL**: `/inventory/transfer`
- **方法**: POST
- **描述**: 进行转库操作
- **参数**:
  - 

outRecord

（请求体）
  - 

inRecord

（请求体）
- **响应**: 转库成功或失败信息

### 获取所有库存记录
- **URL**: `/inventory/records`
- **方法**: GET
- **描述**: 获取所有库存记录
- **参数**: 无
- **响应**: 库存记录列表

### 根据条件获取库存记录
- **URL**: `/inventory/records/conditions`
- **方法**: GET
- **描述**: 根据条件筛选库存记录
- **参数**:
  - 

startTime

（可选，查询参数）
  - 

endTime

（可选，查询参数）
  - 

productId

（可选，查询参数）
  - 

warehouseId

（可选，查询参数）
  - 

operationType

（可选，查询参数）
- **响应**: 库存记录列表

---

## 企业信息管理 (

CompanyController

)

### 获取企业信息
- **URL**: `/company/{companyId}`
- **方法**: GET
- **描述**: 获取指定企业的信息
- **参数**:
  - 

companyId

（路径参数）
- **响应**: 企业信息

### 更新企业信息
- **URL**: `/company`
- **方法**: PUT
- **描述**: 更新企业信息
- **参数**:
  - 

Company

 对象（请求体）
- **响应**: 更新成功或失败信息

### 添加企业信息
- **URL**: `/company`
- **方法**: POST
- **描述**: 添加新的企业信息
- **参数**:
  - 

Company

 对象（请求体）
- **响应**: 添加成功或失败信息

---

## 货品类别管理 (

CategoryController

)

### 获取所有类别
- **URL**: `/categories`
- **方法**: GET
- **描述**: 获取所有货品类别
- **参数**: 无
- **响应**: 类别列表

### 添加类别
- **URL**: `/categories`
- **方法**: POST
- **描述**: 添加新类别
- **参数**:
  - 

Category

 对象（请求体）
- **响应**: 添加成功或失败信息

### 更新类别信息
- **URL**: `/categories`
- **方法**: PUT
- **描述**: 更新类别信息
- **参数**:
  - 

Category

 对象（请求体）
- **响应**: 更新成功或失败信息

### 删除类别
- **URL**: `/categories/{categoryId}`
- **方法**: DELETE
- **描述**: 删除指定类别
- **参数**:
  - 

categoryId

（路径参数）
- **响应**: 删除成功或失败信息

---

## Swagger 文档

### Swagger 配置 (

SwaggerConfig

)
- **URL**: `/swagger-ui.html` 或 `/doc.html`
- **描述**: 访问Swagger UI以查看和测试所有API接口文档

---

## 登录拦截器 (

JwtInterceptor

)

### 认证机制
- 所有请求需要在 `Authorization` 头中携带有效的JWT Token，除 `/auth/**` 路径外。
- 若Token缺失或过期，返回 `401 Unauthorized` 状态码。

---

以上是后端所有接口的总结，供前端VUE开发使用。如需详细接口说明，请参考Swagger文档。